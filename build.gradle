import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'

group = 'com.google.maps'
sourceCompatibility = 1.6

repositories {
    mavenCentral()
}

buildscript {

    ext['dependencyPluginVersion'] = '0.6.1.RELEASE'
    ext['platformVersion'] = '2.0.3.RELEASE'
    ext['springBootVersion'] = '1.3.3.RELEASE'
    // custom versions of platform dependencies
    ext['spring.version'] = '4.2.5.RELEASE'

    repositories {
      maven {
      url "http://repo.spring.io/libs-release"
    }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyPluginVersion}"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
    }
    
    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }
}


jar {
    baseName = 'spring-boot-jersey-RESTAPI'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'joda-time:joda-time:2.4'
    compileOnly 'com.google.appengine:appengine-api-1.0-sdk:1.9.36'
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'com.google.maps', name: 'google-maps-services', version: '0.1.17'
	
	compile "org.springframework.boot:spring-boot-starter-undertow"
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    
	compile "org.springframework.boot:spring-boot-starter-jersey"
    compile "org.springframework.boot:spring-boot-starter-security"
    
    
    compile "org.glassfish.jersey.containers:jersey-container-servlet"
    compile group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.25'
    compile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-bundle', version: '2.25'
    
    compile "org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE"
    // needed when @EnableEntityLinks is used
    compile "org.springframework.plugin:spring-plugin-core:1.1.0.RELEASE"
    
    // HSQLDB for embedded database support
    compile "org.hsqldb:hsqldb"
    
    
    // Utilities
    //compile "com.google.guava:guava"

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.google.mockwebserver:mockwebserver:20130706'
    testCompile 'org.apache.httpcomponents:httpclient:4.3.5'
    testCompile 'org.slf4j:slf4j-simple:1.7.21'


    
    // AssertJ
    testCompile "org.assertj:assertj-core:3.3.0"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    // Groovy
    testCompile 'org.codehaus.groovy:groovy-all:2.4.3'
    testCompile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    testCompile 'com.github.groovy-wslite:groovy-wslite:1.1.0'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    // JUnitParams
    testCompile "pl.pragmatists:JUnitParams:1.0.4"
    // JSONAssert
    testCompile "org.skyscreamer:jsonassert:1.3.0"
    
    
}

task updateVersion(type: Copy) {
    from('src') into "build/filtered/src"
    filter(ReplaceTokens, tokens: [VERSION: project.version])
}
compileJava.source = "build/filtered/src/main/java"
compileJava.dependsOn updateVersion

// Propagate API Key system properties to test tasks
tasks.withType(Test) {
    systemProperty 'api.key', System.getProperty('api.key')
    systemProperty 'client.id', System.getProperty('client.id')
    systemProperty 'client.secret', System.getProperty('client.secret')
}

javadoc {
    exclude '**/internal/**'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

if (ext.'signing.secretKeyRingFile') {
    signing {
        sign configurations.archives
    }
}
